{
  "jsonSchemaSemanticVersion": "1.1.0",
  "imports": [
    {
      "corpusPath": "cdm:/foundations.4.3.cdm.json"
    },
    {
      "corpusPath": "SubComponentType.1.0.cdm.json"
    }
  ],
  "definitions": [
    {
      "entityName": "UnitHeaterSubComponent",
      "extendsEntity": "CdmEntity",
      "hasAttributes": [
        {
          "name": "UnitHeaterSubComponentId",
          "purpose": "identifiedBy",
          "dataType": "string",
          "description": "Unique identifier either coming from previous system otherwise it needs to be defined",
          "maximumLength": 50
        },
        {
          "explanation": "fk SubComponentType. to UnitHeaterSubComponent.",
          "entity": {
            "entityReference": "SubComponentType",
            "appliedTraits": [
              {
                "traitReference": "is.identifiedBy",
                "arguments": [
                  "SubComponentType/(resolvedAttributes)/SubComponentTypeId"
                ]
              }
            ]
          },
          "name": "SubComponentTypeId",
          "resolutionGuidance": {
            "renameFormat": "{m}",
            "entityByReference": {
              "allowReference": true,
              "foreignKeyAttribute": {
                "name": "SubComponentTypeId",
                "purpose": "hasA",
                "dataType": "string",
                "description": "Unique identifier either coming from previous system otherwise it needs to be defined",
                "maximumLength": 50
              }
            }
          }
        },
        {
          "name": "SubComponent",
          "purpose": "hasA",
          "dataType": "string",
          "isNullable": true,
          "description": "Unit heater sub component",
          "maximumLength": 50
        },
        {
          "name": "Type",
          "purpose": "hasA",
          "dataType": "string",
          "isNullable": true,
          "description": "Unit heater sub component type",
          "maximumLength": 50
        },
        {
          "name": "NominalHeatingCapacity",
          "purpose": "hasA",
          "dataType": "decimal",
          "isNullable": true,
          "description": "Nominal heating capacity",
          "appliedTraits": [
            {
              "traitReference": "is.dataFormat.numeric.shaped",
              "arguments": [
                {
                  "name": "precision",
                  "value": "19"
                },
                {
                  "name": "scale",
                  "value": "6"
                }
              ]
            }
          ]
        },
        {
          "name": "SteamUnitHeaterCondensate",
          "purpose": "hasA",
          "dataType": "string",
          "isNullable": true,
          "description": "Condensate information if steam unit heater",
          "maximumLength": 50
        },
        {
          "name": "HotWaterUnitHeaterFlowCapacity",
          "purpose": "hasA",
          "dataType": "decimal",
          "isNullable": true,
          "description": "Flow capacity",
          "appliedTraits": [
            {
              "traitReference": "is.dataFormat.numeric.shaped",
              "arguments": [
                {
                  "name": "precision",
                  "value": "19"
                },
                {
                  "name": "scale",
                  "value": "6"
                }
              ]
            }
          ]
        },
        {
          "name": "ElectricUnitHeaterPowerInput",
          "purpose": "hasA",
          "dataType": "decimal",
          "isNullable": true,
          "description": "Power input",
          "appliedTraits": [
            {
              "traitReference": "is.dataFormat.numeric.shaped",
              "arguments": [
                {
                  "name": "precision",
                  "value": "19"
                },
                {
                  "name": "scale",
                  "value": "6"
                }
              ]
            }
          ]
        },
        {
          "name": "HeatingMethodType",
          "purpose": "hasA",
          "dataType": "string",
          "isNullable": true,
          "description": "Heating method type",
          "maximumLength": 50
        },
        {
          "name": "HeatingMethodOutsideDiameter",
          "purpose": "hasA",
          "dataType": "decimal",
          "isNullable": true,
          "description": "Heating method outside diameter",
          "appliedTraits": [
            {
              "traitReference": "is.dataFormat.numeric.shaped",
              "arguments": [
                {
                  "name": "precision",
                  "value": "19"
                },
                {
                  "name": "scale",
                  "value": "6"
                }
              ]
            }
          ]
        },
        {
          "name": "HeatingMethodName",
          "purpose": "hasA",
          "dataType": "string",
          "isNullable": true,
          "description": "Heating method name of product",
          "maximumLength": 200
        },
        {
          "name": "HeatingMethodCommissionDate",
          "purpose": "hasA",
          "dataType": "dateTime",
          "isNullable": true,
          "description": "Heating method commission date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)"
        },
        {
          "name": "HeatingMethodExpectedEndOfLife",
          "purpose": "hasA",
          "dataType": "dateTime",
          "isNullable": true,
          "description": "Heating method expected end of life date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)"
        },
        {
          "name": "HeatingMethodDurationLifeYear",
          "purpose": "hasA",
          "dataType": "integer",
          "isNullable": true,
          "description": "Heating method life span of component in years"
        },
        {
          "name": "HeatingMethodExpectedReplacementCost",
          "purpose": "hasA",
          "dataType": "decimal",
          "isNullable": true,
          "description": "Heating method expected replacement costs",
          "appliedTraits": [
            {
              "traitReference": "is.dataFormat.numeric.shaped",
              "arguments": [
                {
                  "name": "precision",
                  "value": "28"
                },
                {
                  "name": "scale",
                  "value": "4"
                }
              ]
            }
          ]
        },
        {
          "name": "HeatingMethodInitialCost",
          "purpose": "hasA",
          "dataType": "decimal",
          "isNullable": true,
          "description": "Heating method initial cost",
          "appliedTraits": [
            {
              "traitReference": "is.dataFormat.numeric.shaped",
              "arguments": [
                {
                  "name": "precision",
                  "value": "28"
                },
                {
                  "name": "scale",
                  "value": "4"
                }
              ]
            }
          ]
        },
        {
          "name": "HeatingMethodInstallationDate",
          "purpose": "hasA",
          "dataType": "dateTime",
          "isNullable": true,
          "description": "Installation date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)"
        },
        {
          "name": "HeatingMethodMaintenanceInterval",
          "purpose": "hasA",
          "dataType": "string",
          "isNullable": true,
          "description": "Heating method maintenance interval either as string: monthly, quarterly, etc. or as month",
          "maximumLength": 50
        },
        {
          "name": "HeatingMethodTurnoverDate",
          "purpose": "hasA",
          "dataType": "dateTime",
          "isNullable": true,
          "description": "Heating method turnover date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)"
        },
        {
          "name": "HeatingMethodModelNumber",
          "purpose": "hasA",
          "dataType": "string",
          "isNullable": true,
          "description": "Model number of heating method",
          "maximumLength": 50
        },
        {
          "name": "HeatingMethodTagNumber",
          "purpose": "hasA",
          "dataType": "string",
          "isNullable": true,
          "description": "Heating method tag number",
          "maximumLength": 50
        },
        {
          "name": "HeatingMethodSerialNumber",
          "purpose": "hasA",
          "dataType": "string",
          "isNullable": true,
          "description": "Serial number of heating method",
          "maximumLength": 50
        },
        {
          "name": "FanNominalAirflow",
          "purpose": "hasA",
          "dataType": "decimal",
          "isNullable": true,
          "description": "Fan nominal airflow",
          "appliedTraits": [
            {
              "traitReference": "is.dataFormat.numeric.shaped",
              "arguments": [
                {
                  "name": "precision",
                  "value": "19"
                },
                {
                  "name": "scale",
                  "value": "6"
                }
              ]
            }
          ]
        },
        {
          "name": "FanMotorPower",
          "purpose": "hasA",
          "dataType": "decimal",
          "isNullable": true,
          "description": "Fan motor power",
          "appliedTraits": [
            {
              "traitReference": "is.dataFormat.numeric.shaped",
              "arguments": [
                {
                  "name": "precision",
                  "value": "19"
                },
                {
                  "name": "scale",
                  "value": "6"
                }
              ]
            }
          ]
        },
        {
          "name": "FanMinAirflowRating",
          "purpose": "hasA",
          "dataType": "decimal",
          "isNullable": true,
          "description": "Fan min flow capacity",
          "appliedTraits": [
            {
              "traitReference": "is.dataFormat.numeric.shaped",
              "arguments": [
                {
                  "name": "precision",
                  "value": "19"
                },
                {
                  "name": "scale",
                  "value": "6"
                }
              ]
            }
          ]
        },
        {
          "name": "FanMaxAirflowRating",
          "purpose": "hasA",
          "dataType": "decimal",
          "isNullable": true,
          "description": "Fan max flow capacity",
          "appliedTraits": [
            {
              "traitReference": "is.dataFormat.numeric.shaped",
              "arguments": [
                {
                  "name": "precision",
                  "value": "19"
                },
                {
                  "name": "scale",
                  "value": "6"
                }
              ]
            }
          ]
        },
        {
          "name": "FanDriveType",
          "purpose": "hasA",
          "dataType": "string",
          "isNullable": true,
          "description": "Fan fan drive type",
          "maximumLength": 50
        },
        {
          "name": "FanName",
          "purpose": "hasA",
          "dataType": "string",
          "isNullable": true,
          "description": "Name of fan",
          "maximumLength": 200
        },
        {
          "name": "FanCommissionDate",
          "purpose": "hasA",
          "dataType": "dateTime",
          "isNullable": true,
          "description": "Fan commission date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)"
        },
        {
          "name": "FanExpectedEndOfLife",
          "purpose": "hasA",
          "dataType": "dateTime",
          "isNullable": true,
          "description": "Fan expected end of life date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)"
        },
        {
          "name": "FanDurationLifeYear",
          "purpose": "hasA",
          "dataType": "integer",
          "isNullable": true,
          "description": "Fan life span of component in years"
        },
        {
          "name": "FanExpectedReplacementCost",
          "purpose": "hasA",
          "dataType": "decimal",
          "isNullable": true,
          "description": "Fan expected replacement costs",
          "appliedTraits": [
            {
              "traitReference": "is.dataFormat.numeric.shaped",
              "arguments": [
                {
                  "name": "precision",
                  "value": "28"
                },
                {
                  "name": "scale",
                  "value": "4"
                }
              ]
            }
          ]
        },
        {
          "name": "FanInitialCost",
          "purpose": "hasA",
          "dataType": "decimal",
          "isNullable": true,
          "description": "Fan initial cost",
          "appliedTraits": [
            {
              "traitReference": "is.dataFormat.numeric.shaped",
              "arguments": [
                {
                  "name": "precision",
                  "value": "28"
                },
                {
                  "name": "scale",
                  "value": "4"
                }
              ]
            }
          ]
        },
        {
          "name": "Currency",
          "purpose": "hasA",
          "dataType": "string",
          "isNullable": true,
          "description": "Currency ",
          "maximumLength": 50
        },
        {
          "name": "FanInstallationDate",
          "purpose": "hasA",
          "dataType": "dateTime",
          "isNullable": true,
          "description": "Installation date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)"
        },
        {
          "name": "FanMaintenanceInterval",
          "purpose": "hasA",
          "dataType": "string",
          "isNullable": true,
          "description": "Fan maintenance interval either as string: monthly, quarterly, etc. or as month",
          "maximumLength": 50
        },
        {
          "name": "FanTurnoverDate",
          "purpose": "hasA",
          "dataType": "dateTime",
          "isNullable": true,
          "description": "Fan turnover date in yyyy-mm-ddThh:mm:ssZ form (conform to ISO 8061)"
        },
        {
          "name": "FanModelNumber",
          "purpose": "hasA",
          "dataType": "string",
          "isNullable": true,
          "description": "Model number of fan",
          "maximumLength": 50
        },
        {
          "name": "FanTagNumber",
          "purpose": "hasA",
          "dataType": "string",
          "isNullable": true,
          "description": "Fan tag number",
          "maximumLength": 50
        },
        {
          "name": "FanSerialNumber",
          "purpose": "hasA",
          "dataType": "string",
          "isNullable": true,
          "description": "Serial number of fan",
          "maximumLength": 50
        }
      ],
      "displayName": "UnitHeaterSubComponent",
      "description": "Information about steam unit heater"
    }
  ]
}